{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AdminController"
    },
    "name": "MyController",
    "designerId": "3569a569-9f1c-455f-a9ba-8de788827777",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "productListPanel",
                "selector": "#productListPanel"
            },
            "name": "productListPanel",
            "designerId": "8d0e0faf-3e8c-4654-803e-7aedfc8e2ab0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "customerConfirmPanel",
                "selector": "#customerConfirmPanel"
            },
            "name": "customerConfirmPanel",
            "designerId": "130ecbf2-9e67-4aa9-9f1e-4476f04f20b3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "orderRequestsPanel",
                "selector": "#orderRequestsPanel"
            },
            "name": "orderRequestsPanel",
            "designerId": "e26013c7-9a3e-44c2-84b1-c0bbe856ad0f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "viewAllOrderPanel",
                "selector": "#viewAllOrderPanel"
            },
            "name": "viewAllOrderPanel",
            "designerId": "201f2005-70b7-4e39-846f-8b3c1402b628"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "centerContainer",
                "selector": "#CenterContainer"
            },
            "name": "centerContainer",
            "designerId": "a0e638c5-ae5b-4959-b2f5-677016096997"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnCustomerRequest",
                "designer|targetType": "MyButton2",
                "fn": "onBtnCustomerRequestClick",
                "implHandler": [
                    "this.getCustomerConfirmPanel().show();",
                    "this.getOrderRequestsPanel().hide();",
                    "this.getViewAllOrderPanel().hide();",
                    "",
                    "var customerRequestGrid = Ext.getCmp('membershipRequestGrid');",
                    "var customerRequestStore = customerRequestGrid.getStore();",
                    "",
                    "customerRequestStore.clearData();",
                    "customerRequestGrid.getView().refresh();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: window.location.pathname +'admin/userRequest',",
                    "    method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "        for (var ctr = 0; ctr < responseText.userRequest.length; ctr++){",
                    "            var userRequest = {",
                    "                userId:responseText.userRequest[ctr].userId,",
                    "                fullName: responseText.userRequest[ctr].fullname,",
                    "                currentMembershipLevel: responseText.userRequest[ctr].currentType,",
                    "                requestedMembershipLevel: responseText.userRequest[ctr].requestType,",
                    "                isForApproval: responseText.userRequest[ctr].forApproval,",
                    "                isRequestApproved: responseText.userRequest[ctr].isApproved",
                    "            };",
                    "            customerRequestStore.add(userRequest);",
                    "       }",
                    "  },",
                    "    failure: function(){",
                    "        Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnCustomerRequestClick",
            "designerId": "52efd37d-6f8e-4ea5-bce3-58a6321639fb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#confirmOrderBtn",
                "designer|targetType": "MyButton3",
                "fn": "onConfirmOrderBtnClick",
                "implHandler": [
                    "this.getOrderRequestsPanel().show();",
                    "this.getViewAllOrderPanel().hide();",
                    "this.getCustomerConfirmPanel().hide();",
                    "",
                    "var orderGrid = Ext.getCmp('orderRequestsGrid');",
                    "var orderGridStore = orderGrid.getStore();",
                    "",
                    "orderGridStore.remoteFilter = false;",
                    "orderGridStore.clearFilter();",
                    "orderGridStore.filter('orderStatus','Pending Order');",
                    "",
                    "orderGridStore.clearData();",
                    "orderGrid.getView().refresh();",
                    "",
                    "Ext.Ajax.request({",
                    "     url: window.location.pathname +'admin/getOrders',",
                    "     method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "          var responseText = Ext.decode(response.responseText);",
                    "",
                    "       for (var ctr = 0; ctr < responseText.orderList.length; ctr++){",
                    "            var order = {",
                    "                orderId: responseText.orderList[ctr].order.orderId,",
                    "                userId: responseText.orderList[ctr].userID,",
                    "                userFullName: responseText.orderList[ctr].fullName,",
                    "                orderDate: responseText.orderList[ctr].order.orderDate,",
                    "                totalCost: responseText.orderList[ctr].order.totalCost,",
                    "                orderStatus: responseText.orderList[ctr].order.orderStatus",
                    "",
                    "            };",
                    "",
                    "            orderGridStore.add(order);",
                    "        }",
                    "    },",
                    "",
                    "    failure: function(){",
                    "        Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onConfirmOrderBtnClick",
            "designerId": "2eb005c0-82db-41f4-b4d9-0d24f786a954"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnLogin",
                "designer|targetType": "MyButton",
                "fn": "onBtnLoginClick",
                "implHandler": [
                    "var userName = Ext.getCmp('txtUsername').getValue();",
                    "var userPassword = Ext.getCmp('txtPassword').getValue();",
                    "var userStore = Ext.getStore('userStore');",
                    "userStore.removeAll();",
                    "",
                    "Ext.Ajax.request({",
                    "",
                    "    url: window.location.pathname +'admin/login',",
                    "    method: 'POST',",
                    "",
                    "    params: {",
                    "        userName: userName,",
                    "        userPassword: userPassword",
                    "    },",
                    "    scope:this,",
                    "    success:function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "",
                    "        if (responseText.success == true){",
                    "               if (responseText.user.userRole != 'Admin'){",
                    "                    Ext.MessageBox.alert('Status', 'Unauthorized User');",
                    "                    Ext.getCmp('txtUsername').setValue();",
                    "                    Ext.getCmp('txtPassword').setValue();",
                    "                }",
                    "                else{",
                    "",
                    "                    var loggedInUser = {",
                    "                        userId: responseText.user.userId,",
                    "                        userName: responseText.user.username,",
                    "                        userFullName: responseText.user.fullName,",
                    "                        userRole: responseText.user.userRole,",
                    "                        userPassword: ''",
                    "                    };",
                    "",
                    "                    userStore.add(loggedInUser);",
                    "                    Ext.MessageBox.alert('Status', 'Logged in successfully');",
                    "                    Ext.getCmp('txtUsername').setValue();",
                    "                    Ext.getCmp('txtPassword').setValue();",
                    "                    this.getLoginContainer().hide();",
                    "                    this.getAdminPageContainer().show();",
                    "",
                    "                }",
                    "        } else {",
                    "            Ext.MessageBox.alert('Login Failed', 'Invalid Credentials');",
                    "            Ext.getCmp('txtUsername').setValue();",
                    "            Ext.getCmp('txtPassword').setValue();",
                    "        }",
                    "",
                    "    },",
                    "    failure:function(){",
                    "        Ext.MessageBox.alert('Login Failed', 'Unable to connect to server, Please try again.');",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnLoginClick",
            "designerId": "9ea1ff08-986e-4dc1-8aa8-ddd7110d4e42"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "username",
                "selector": "#txtUsername"
            },
            "name": "username",
            "designerId": "d412760c-0643-4eb2-889a-ca6800d7cfba"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "password",
                "selector": "#txtPassword"
            },
            "name": "password",
            "designerId": "b8b25e34-4e49-480a-b067-592cf2352b8d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginContainer",
                "selector": "#loginContainer"
            },
            "name": "loginContainer",
            "designerId": "58372634-aa62-482f-abc0-6456361f505d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "adminPageContainer",
                "selector": "#adminContainer"
            },
            "name": "adminPageContainer",
            "designerId": "bfd96f49-6cb8-4b5b-a038-fd65594d8e75"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#viewAllOrderGrid",
                "designer|targetType": "MyGridPanel2",
                "fn": "onViewAllOrderGridItemDblClick",
                "implHandler": [
                    "var viewAllOrderGrid = Ext.getCmp('viewAllOrderGrid');",
                    "         var orderItems = Ext.getStore('orderItems');",
                    "         var selModel = viewAllOrderGrid.getSelectionModel();",
                    "         var selectedRecords = selModel.getSelection();",
                    "         var selectionCount = selModel.getCount();",
                    "         var orderId = selectedRecords[0].data.orderId;",
                    "",
                    "         orderItems.clearFilter(true);",
                    "         orderItems.filter('orderId', orderId);",
                    "        Ext.create('Ext.window.Window',{",
                    "",
                    "                               rendetTo: Ext.getBody(),",
                    "                               bodyPadding: 10,",
                    "                               title: 'My Transactions',",
                    "                               closable: true,",
                    "                               autoShow: true,",
                    "                               resizable: false,",
                    "                               modal: true,",
                    "                               draggable: false,",
                    "                               width:1054,",
                    "                               height:600,",
                    "                               items:[ {",
                    "",
                    "                                           xtype: 'gridpanel',",
                    "                                           id: 'orderSummaryGridPanel',",
                    "                                           itemId: 'orderSummaryGridPanel',",
                    "                                           store: 'orderItems',",
                    "                                                    columns: [",
                    "                                                        {",
                    "                                                            xtype: 'gridcolumn',",
                    "                                                            width: 500,",
                    "                                                            flex:1,",
                    "                                                            dataIndex: 'productId',",
                    "                                                            text: 'Product Id'",
                    "                                                        },",
                    "                                                         {",
                    "                                                            xtype: 'gridcolumn',",
                    "                                                            width: 200,",
                    "                                                              flex:1,",
                    "                                                            dataIndex: 'productName',",
                    "                                                            text: 'Product Name'",
                    "                                                        },",
                    "                                                       {",
                    "                                                            xtype: 'numbercolumn',",
                    "                                                            width: 272,",
                    "                                                            flex:1,",
                    "                                                            dataIndex: 'quantity',",
                    "                                                           format: 0,",
                    "                                                            text: 'Quantity'",
                    "                                                        },",
                    "                                                       {",
                    "                                                            xtype: 'numbercolumn',",
                    "                                                            width: 272,",
                    "                                                            flex:1,",
                    "                                                            dataIndex: 'productPrice',",
                    "                                                            text: 'Price'",
                    "                                                        }",
                    "                                                    ]",
                    "                                        }",
                    "                                      ]",
                    "                });",
                    "                var orderStore = Ext.getStore('orderItems');",
                    "                var orderId = orderStore.data.items[0].data.orderId;"
                ],
                "name": "itemdblclick",
                "scope": "me"
            },
            "name": "onViewAllOrderGridItemDblClick",
            "designerId": "d387b3cf-79a8-46c3-861f-86fe7b4fbdb4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnApproveRequest",
                "designer|targetType": "MyButton5",
                "fn": "onBtnApproveRequestClick",
                "implHandler": [
                    "var userRequestGrid = Ext.getCmp('membershipRequestGrid');",
                    "var userGridStore = userRequestGrid.getStore();",
                    "var selectedRows = userRequestGrid.getSelectionModel().getSelection()[0];",
                    "var rowIndex = userGridStore.indexOf(selectedRows);",
                    "if (rowIndex >-1 ){",
                    "    var userId = selectedRows.data.userId;",
                    "    var requestedMembershipLevel = selectedRows.data.requestedMembershipLevel;",
                    "    Ext.Msg.confirm('Approve Request', 'Do you want to Approve this request?',function(btn){",
                    "        if (btn==='yes'){",
                    "",
                    "                Ext.Ajax.request({",
                    "                    url: window.location.pathname +'update/membershipApproval',",
                    "                    method: 'POST',",
                    "                        params:{",
                    "                        userId: userId,",
                    "                        approvedType:requestedMembershipLevel,",
                    "                        isApproved:1",
                    "                        },",
                    "",
                    "                    scope:this,",
                    "                    success: function(response){",
                    "                        var responseText = Ext.decode(response.responseText);",
                    "                        Ext.MessageBox.alert('Status', 'Record Updated');",
                    "",
                    "                    },",
                    "                    failure:function(){",
                    "                        Ext.MessageBox.alert('Status', 'Unable to connect to server');",
                    "                    }",
                    "              });",
                    "            userGridStore.remove(selectedRows);",
                    "        }",
                    "    });} else {",
                    "       Ext.MessageBox.alert('Status','Please select a request to approve');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnApproveRequestClick",
            "designerId": "02a0b07c-1be4-41ab-a371-8e80e109dc7f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnRejectRequest",
                "designer|targetType": "MyButton6",
                "fn": "onBtnRejectRequestClick",
                "implHandler": [
                    "var userRequestGrid = Ext.getCmp('membershipRequestGrid');",
                    "var userGridStore = userRequestGrid.getStore();",
                    "var selectedRows = userRequestGrid.getSelectionModel().getSelection()[0];",
                    "var rowIndex = userGridStore.indexOf(selectedRows);",
                    "if (rowIndex >-1 ){",
                    "    var userId = selectedRows.data.userId;",
                    "    var requestedMembershipLevel = selectedRows.data.requestedMembershipLevel;",
                    "    Ext.Msg.confirm('Approve Request', 'Do you want to Reject this request?',function(btn){",
                    "        if (btn==='yes'){",
                    "              Ext.Ajax.request({",
                    "                    url: window.location.pathname +'update/membershipApproval',",
                    "                    method: 'POST',",
                    "                        params:{",
                    "                        userId: userId,",
                    "                        approvedType:requestedMembershipLevel,",
                    "                        isApproved:0",
                    "",
                    "                        },",
                    "",
                    "                scope:this,",
                    "                success: function(response){",
                    "                    var responseText = Ext.decode(response.responseText);",
                    "",
                    "                },",
                    "                  failure:function(){",
                    "                      Ext.MessageBox.alert('Status','Unable to connect to server')",
                    "                  }",
                    "",
                    "            });",
                    "            userGridStore.remove(selectedRows);",
                    "        }",
                    "    });} else {",
                    "       Ext.MessageBox.alert('Status','Please select a request ');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnRejectRequestClick",
            "designerId": "5c1ae895-ac31-4961-9faf-e5470dbf8f08"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSaveUpdates",
                "designer|targetType": "MyButton1",
                "fn": "onBtnSaveUpdatesClick",
                "implHandler": [
                    "",
                    "",
                    "var orderRequestsGrid = Ext.getCmp('orderRequestsGrid');",
                    "var orderRequestsStore = orderRequestsGrid.getStore();",
                    "var selectedRows = orderRequestsGrid.getSelectionModel().getSelection()[0];",
                    "var rowIndex = orderRequestsStore.indexOf(selectedRows);",
                    "if (rowIndex >-1 ){",
                    "    var orderId = selectedRows.data.orderId;",
                    "    var orderStatus = selectedRows.data.orderStatus;",
                    "    Ext.Msg.confirm('Approve Request', 'Do you want to Approve this request?',function(btn){",
                    "        if (btn==='yes'){",
                    "                Ext.Ajax.request({",
                    "                    url: window.location.pathname +'update/updateOrderStatus',",
                    "                    method: 'POST',",
                    "                        params:{",
                    "                            orderId: orderId,",
                    "                            status: orderStatus",
                    "                        },",
                    "",
                    "                scope:this,",
                    "                success: function(response){",
                    "                    var responseText = Ext.decode(response.responseText);",
                    "                     Ext.MessageBox.alert('Status','Order Updated');",
                    "",
                    "                }",
                    "",
                    "            });",
                    "",
                    "        }",
                    "    });} else {",
                    "       Ext.MessageBox.alert('Status','Please select a request to approve');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnSaveUpdatesClick",
            "designerId": "d2466c1e-66cf-4193-98c0-160bee706ef0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#membershipRequest",
                "designer|targetType": "MyMenuItem1",
                "fn": "onMembershipRequestClick",
                "implHandler": [
                    "this.getCustomerConfirmPanel().show();",
                    "this.getOrderRequestsPanel().hide();",
                    "this.getViewAllOrderPanel().hide();",
                    "this.getProductListPanel().hide();",
                    "this.getUserListPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "",
                    "",
                    "var customerRequestGrid = Ext.getCmp('membershipRequestGrid');",
                    "var customerRequestStore = customerRequestGrid.getStore();",
                    "",
                    "customerRequestStore.clearData();",
                    "customerRequestGrid.getView().refresh();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: window.location.pathname +'admin/userRequest',",
                    "    method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "        for (var ctr = 0; ctr < responseText.userRequest.length; ctr++){",
                    "            var userRequest = {",
                    "                userId:responseText.userRequest[ctr].userId,",
                    "                fullName: responseText.userRequest[ctr].fullname,",
                    "                currentMembershipLevel: responseText.userRequest[ctr].currentType,",
                    "                requestedMembershipLevel: responseText.userRequest[ctr].requestType,",
                    "                isForApproval: responseText.userRequest[ctr].forApproval,",
                    "                isRequestApproved: responseText.userRequest[ctr].isApproved",
                    "            };",
                    "            customerRequestStore.add(userRequest);",
                    "       }",
                    "  },",
                    "    failure: function(){",
                    "        Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onMembershipRequestClick",
            "designerId": "34f26461-14ab-4f8c-a584-b8337038c534"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#viewAllOrder",
                "designer|targetType": "MyMenuItem4",
                "fn": "onViewAllOrderClick",
                "implHandler": [
                    "this.getOrderRequestsPanel().hide();",
                    "this.getCustomerConfirmPanel().hide();",
                    "this.getProductListPanel().hide();",
                    "this.getUserListPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "this.getViewAllOrderPanel().show();",
                    "",
                    "var viewAllGrid = Ext.getCmp('viewAllOrderGrid');",
                    "var viewAllGridStore = viewAllGrid.getStore();",
                    "var orderItemsStore = Ext.getStore('orderItems');",
                    "",
                    "orderItemsStore.removeAll();",
                    "viewAllGridStore.clearData();",
                    "viewAllGrid.getView().refresh();",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "     url: window.location.pathname +'admin/getOrders',",
                    "     method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "",
                    "        for (var ctr = 0; ctr < responseText.orderList.length; ctr++){",
                    "            var order = {",
                    "                orderId: responseText.orderList[ctr].order.orderId,",
                    "                userId: responseText.orderList[ctr].userID,",
                    "                userFullName: responseText.orderList[ctr].fullName,",
                    "                orderDate: responseText.orderList[ctr].order.orderDate,",
                    "                totalCost: responseText.orderList[ctr].order.totalCost,",
                    "                orderStatus: responseText.orderList[ctr].order.orderStatus",
                    "",
                    "            };",
                    "",
                    "            viewAllGridStore.add(order);",
                    "        }",
                    "",
                    "",
                    "        for (var i = 0; i < responseText.itemList.length; i++){",
                    "            var items = {",
                    "                orderId: responseText.itemList[i].orderId,",
                    "                orderItemId: responseText.itemList[i].item.orderItemId,",
                    "                productId: responseText.itemList[i].item.productId,",
                    "                productName: responseText.itemList[i].productname,",
                    "                quantity: responseText.itemList[i].item.quantity,",
                    "                productPrice: responseText.itemList[i].item.productPrice",
                    "",
                    "            };",
                    "",
                    "            orderItemsStore.add(items);",
                    "        }",
                    "    },",
                    "",
                    "    failure: function(){",
                    "        Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onViewAllOrderClick",
            "designerId": "5b2527cd-515f-49aa-8fdd-225d054b7e1a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#products",
                "designer|targetType": "MyMenuItem",
                "fn": "onProductsClick",
                "implHandler": [
                    "this.getOrderRequestsPanel().hide();",
                    "        this.getCustomerConfirmPanel().hide();",
                    "        this.getViewAllOrderPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "        this.getProductListPanel().show();",
                    "",
                    "        var productGrid = Ext.getCmp('productListGrid');",
                    "        var productGridStore = productGrid.getStore();",
                    "",
                    "        productGridStore.removeAll();",
                    "        productGridStore.clearData();",
                    "        productGrid.getView().refresh();",
                    "",
                    "",
                    "        Ext.Ajax.request({",
                    "             url: window.location.pathname +'admin/getProducts',",
                    "             method: 'POST',",
                    "",
                    "            scope: this,",
                    "            success: function(response){",
                    "                var responseText = Ext.decode(response.responseText);",
                    "",
                    "",
                    "                for (var i = 0; i < responseText.productList.length; i++){",
                    "                    var items = {",
                    "                        productId: responseText.productList[i].productId,",
                    "                        productName: responseText.productList[i].productName,",
                    "                        productDescription: responseText.productList[i].productDescription,",
                    "                        productPrice: responseText.productList[i].productPrice,",
                    "                        productStockQuantity: responseText.productList[i].productStockQuantity,",
                    "                        productImagePath: responseText.productList[i].productImagePath",
                    "                    };",
                    "",
                    "                    productGridStore.add(items);",
                    "                }",
                    "            },",
                    "",
                    "            failure: function(){",
                    "                Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "            }",
                    "",
                    "        });"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onProductsClick",
            "designerId": "60a661a5-1d8e-452f-875f-f4af2623ab30"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#logout",
                "designer|targetType": "MyMenuItem5",
                "fn": "onLogoutClick",
                "implHandler": [
                    "        var userStore  = Ext.getStore('userStore');",
                    "        userStore.removeAll();",
                    "        Ext.Msg.alert('Status', 'Signing out.');",
                    "        ",
                    "        this.getAdminPageContainer().hide();",
                    "        this.getLoginContainer().show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onLogoutClick",
            "designerId": "16343560-228b-4e9b-adac-0b1add354241"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAddProduct",
                "designer|targetType": "MyButton7",
                "fn": "onBtnAddProductClick",
                "implHandler": [
                    "var adminAddProduct = Ext.create('MyApp.view.AdminAddProductWindow', {});",
                    "adminAddProduct.show();",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnAddProductClick",
            "designerId": "6a0de22a-9f96-4313-8690-522ae3392469"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnUpdateProduct",
                "designer|targetType": "MyButton8",
                "fn": "onBtnUpdateProductClick",
                "implHandler": [
                    "var productListGrid = Ext.getCmp('productListGrid');",
                    "var productListStore = productListGrid.getStore();",
                    "var updatedRecords = productListStore.getModifiedRecords();",
                    "var updateProduct = Ext.getStore('updateProduct');",
                    "",
                    "Ext.each(updatedRecords,function(record){",
                    "            if (record.dirty){",
                    "                var product = {",
                    "                    productId: record.data.productId,",
                    "                    productName: record.data.productName,",
                    "                    productDescription: record.data.productDescription,",
                    "                    productPrice: record.data.productPrice,",
                    "                    productStockQuantity: record.data.productStockQuantity,",
                    "                    productImagePath: record.data.productImagePath",
                    "",
                    "                };",
                    "                updateProduct.add(product);",
                    "            }",
                    "",
                    "        });",
                    "if (updateProduct.data.items.length > 0){",
                    "        Ext.Msg.confirm('Status', 'Do you want to update?', function(btn){",
                    "",
                    "            if (btn==='yes'){",
                    "                var jsonData = '{ \"productList\": ';",
                    "                jsonData += Ext.encode(Ext.pluck(updateProduct.data.items,'data'));",
                    "                jsonData += '}';",
                    "",
                    "                Ext.Ajax.request({",
                    "                    url: 'update/updateProduct',",
                    "                    method: 'POST',",
                    "",
                    "                    params:{",
                    "",
                    "                        jsonData: jsonData,",
                    "                    },",
                    "",
                    "                    scope: this,",
                    "                    success: function(response){",
                    "                        var responseText = Ext.decode(response.responseText);",
                    "                        Ext.MessageBox.alert('Status','Records Updated Successfully');",
                    "                    },",
                    "                    failure:function(response){",
                    "                        Ext.MessageBox.alert('Status','Unable to connect to server');",
                    "                    }",
                    "",
                    "                });",
                    "",
                    "            }    ",
                    "        });      ",
                    "}else{",
                    "    ",
                    "    Ext.MessageBox.alert('Status', 'Please select a record to update');",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnUpdateProductClick",
            "designerId": "80c490c7-1bfa-4144-b286-73e77581fa6a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "addProductContainer",
                "selector": "#AddProductContainer"
            },
            "name": "addProductContainer",
            "designerId": "832ca75f-2bfa-4d3c-a6a0-f88f6ca3e066"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSaveProduct",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnSaveProduct",
                "implHandler": [
                    "var productName = Ext.getCmp('frmProductName').getValue();",
                    "var productDescription = Ext.getCmp('frmProductDescription').getValue();",
                    "var productPrice = Ext.getCmp('frmProductPrice').getValue();",
                    "var productInStock = Ext.getCmp('frmProductQuantity').getValue();",
                    "var productImagePath = Ext.getCmp('frmProductImagePath').getValue();",
                    "",
                    "Ext.Ajax.request({",
                    "       url: 'admin/addProduct',",
                    "            method: 'POST',",
                    "    params:{",
                    "        productName: productName,",
                    "        productDescription: productDescription,",
                    "        productPrice:productPrice,",
                    "        productStockQuantity: productInStock,",
                    "        productImagePath: productImagePath",
                    "    },",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = JSON.parse(response.responseText);",
                    "        ",
                    "    }",
                    "",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnSaveProduct",
            "designerId": "1a6746a1-1938-4493-abbf-5f8019621542"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#viewUserList",
                "designer|targetType": "MyMenuItem3",
                "fn": "onViewUserListClick",
                "implHandler": [
                    "  this.getOrderRequestsPanel().hide();",
                    "        this.getCustomerConfirmPanel().hide();",
                    "        this.getProductListPanel().hide();",
                    "        this.getViewAllOrderPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "this.getUserListPanel().show();",
                    "",
                    "",
                    "        var viewUserGrid = Ext.getCmp('viewUserListGrid');",
                    "        var viewUserGridStore = viewUserGrid.getStore();",
                    "        var userListStore = Ext.getStore('userList');",
                    "",
                    "        userListStore.removeAll();",
                    "        viewUserGridStore.clearData();",
                    "        viewUserGrid.getView().refresh();",
                    "",
                    "",
                    "        Ext.Ajax.request({",
                    "             url: window.location.pathname +'admin/getUsers',",
                    "             method: 'POST',",
                    "",
                    "            scope: this,",
                    "            success: function(response){",
                    "                var responseText = Ext.decode(response.responseText);",
                    "",
                    "                for (var ctr = 0; ctr < responseText.userList.length; ctr++){",
                    "                    var user = {",
                    "                        userId: responseText.userList[ctr].user.userId,",
                    "                        fullName: responseText.userList[ctr].user.fullName,",
                    "                        userName: responseText.userList[ctr].user.username,",
                    "                        email: responseText.userList[ctr].user.email,",
                    "                        address: responseText.userList[ctr].user.address,",
                    "                        mobile: responseText.userList[ctr].user.mobileNumber,",
                    "                        userRole: responseText.userList[ctr].user.userRole,",
                    "                        isBlacklisted: responseText.userList[ctr].user.isBlacklisted,",
                    "                        membershipType: responseText.userList[ctr].membershipType",
                    "",
                    "                    };",
                    "",
                    "                    viewUserGridStore.add(user);",
                    "                }",
                    "            },",
                    "",
                    "            failure: function(){",
                    "                Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "            }",
                    "",
                    "        });"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onViewUserListClick",
            "designerId": "735c7e47-7e0a-4de0-bc56-f8eb359dbc76"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userListPanel",
                "selector": "#userListPanel"
            },
            "name": "userListPanel",
            "designerId": "22b551b6-4242-45fb-9b72-78938473798b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#addUser",
                "designer|targetType": "MyButton12",
                "fn": "onAddUserClick",
                "implHandler": [
                    "this. userAdminWindow= Ext.create('MyApp.view.AdminUserWindow',{});",
                    "",
                    "        this.userAdminWindow.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onAddUserClick",
            "designerId": "1062e828-45f9-4d25-b068-2c8981f4bda6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSaveAdmin",
                "designer|targetType": "MyButton15",
                "fn": "onBtnSaveAdminClick",
                "implHandler": [
                    "        var frmAddAdmin = Ext.getCmp('frmAddAdminUser');",
                    "        var fullname = frmAddAdmin.query('#frmAdminFullname')[0].getValue();",
                    "        var username = frmAddAdmin.query('#frmAdminUsername')[0].getValue();",
                    "        var password = frmAddAdmin.query('#frmAdminPassword')[0].getValue();",
                    "        var confirmPassword = frmAddAdmin.query('#frmAdminConfirm')[0].getValue();",
                    "        var email = frmAddAdmin.query('#frmAdminEmail')[0].getValue();",
                    "        var address = frmAddAdmin.query('#frmAdminAddress')[0].getValue();",
                    "        var mobile = frmAddAdmin.query('#frmAdminMobile')[0].getValue();",
                    "        var userRole = 'Admin';",
                    "",
                    "        if(frmAddAdmin.isValid()){",
                    "                    if(password === confirmPassword){",
                    "                            Ext.Ajax.request({",
                    "",
                    "                                 url: window.location.pathname +'update/addUser',",
                    "                                 method: 'POST',",
                    "",
                    "                                 params: {",
                    "                                    userName: username,",
                    "                                    userPassword: password,",
                    "                                    fullName: fullname,",
                    "                                    email: email,",
                    "                                    deliveryAddress: address,",
                    "                                    mobileNumber: mobile,",
                    "                                    userRole: userRole",
                    "                             },",
                    "                                 scope: this,",
                    "                                 success: function(response){",
                    "                                             var responseText = Ext.decode(response.responseText);",
                    "                                     if(responseText.data.errormsg.indexOf('none') >-1){",
                    "                                         Ext.MessageBox.alert('Registation','Admin Account Created, Successfully Created Admin Account!');",
                    "                                          Ext.getCmp('adminUserWindow').close();",
                    "                                     }",
                    "",
                    "                                     if (responseText.data.errormsg.indexOf('usernametaken') >-1){",
                    "                                         Ext.MessageBox.alert('Registation Failed','Username is already taken!');",
                    "                                     }",
                    "",
                    "                                     if (responseText.data.errormsg.indexOf('emailtaken') >-1){",
                    "                                         Ext.MessageBox.alert('Registation Failed','Email is already taken!');",
                    "                                     }",
                    "",
                    "                                 }",
                    "                                 });",
                    "",
                    "                    }else{",
                    "                        Ext.MessageBox.alert('Invalid confirmPassword','Passowrd does not match');",
                    "                    }",
                    "                }else{",
                    "                    Ext.MessageBox.alert('Invalid Information','Kindly fill up the form with correct information');",
                    "                }"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnSaveAdminClick",
            "designerId": "5a2d4854-41d2-4526-acde-d45e7ffd560e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmBtnSave",
                "designer|targetType": "MyButton17",
                "fn": "onFrmBtnSaveClick",
                "implHandler": [
                    "var frmAdminAddProduct = Ext.getCmp('frmAdminAddProduct');",
                    "var productName = Ext.getCmp('frmProductName').getValue();",
                    "var productDescription = Ext.getCmp('frmProductDescription').getValue();",
                    "var productPrice = Ext.getCmp('frmProductPrice').getValue();",
                    "var productInStock = Ext.getCmp('frmProductQuantity').getValue();",
                    "var productImagePath = Ext.getCmp('frmImagePath').getValue();",
                    "",
                    "",
                    "",
                    "if (frmAdminAddProduct.isValid()){",
                    "",
                    "    Ext.Ajax.request({",
                    "           url: 'update/addProducts',",
                    "                method: 'POST',",
                    "        params:{",
                    "            productName: productName,",
                    "            productDescription: productDescription,",
                    "            productPrice:productPrice,",
                    "            productStockQuantity: productInStock,",
                    "            productImagePath: productImagePath",
                    "        },",
                    "",
                    "        scope: this,",
                    "        success: function(response){",
                    "            var responseText = Ext.decode(response.responseText);",
                    "            alert(responseText);",
                    "            Ext.MessageBox.alert('Status', 'Successfully added product to the list');",
                    "            Ext.getCmp('frmProductName').setValue();",
                    "            Ext.getCmp('frmProductDescription').setValue();",
                    "            Ext.getCmp('frmProductPrice').setValue();",
                    "            Ext.getCmp('frmProductQuantity').setValue();",
                    "            Ext.getCmp('frmImagePath').setValue();",
                    "",
                    "        },",
                    "",
                    "         failure: function(){",
                    "            Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "         }",
                    "",
                    "    });",
                    "} else{",
                    "    Ext.MessageBox.alert('Invalid information','Kindly fill up the form with correct information');",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onFrmBtnSaveClick",
            "designerId": "a9cc10be-578d-41a6-b2dd-00d9e161fd02"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnUpdateAdmin",
                "designer|targetType": "MyButton13",
                "fn": "onBtnUpdateAdminClick",
                "implHandler": [
                    "var viewUserListGrid = Ext.getCmp('viewUserListGrid');",
                    "var userListStore = viewUserListGrid.getStore();",
                    "var updatedRecords = userListStore.getModifiedRecords();",
                    "var updateUser = Ext.getStore('updatedUser');",
                    "Ext.each(updatedRecords,function(record){",
                    "    if (record.dirty){",
                    "        var user = {",
                    "",
                    "            userId: record.data.userId,",
                    "            fullName: record.data.fullName,",
                    "            userName: record.data.userName,",
                    "            email: record.data.email,",
                    "            address: record.data.address,",
                    "            mobile: record.data.mobile,",
                    "            userRole: record.data.userRole,",
                    "            isBlacklisted: record.data.isBlacklisted,",
                    "            membershipType: record.data.membershipType",
                    "        };",
                    "        updateUser.add(user);",
                    "    }",
                    "",
                    "});",
                    "",
                    "if (updateUser.data.items.length > 0){",
                    "    Ext.Msg.confirm('Status', 'Do you want to update?', function(btn){",
                    "       if (btn==='yes'){",
                    "            var jsonData = '{ \"userList\": ';",
                    "            jsonData += Ext.encode(Ext.pluck(updateUser.data.items,'data'));",
                    "            jsonData += '}';",
                    "",
                    "            Ext.Ajax.request({",
                    "",
                    "                url: 'update/updateUser',",
                    "                method: 'POST',",
                    "",
                    "                params:{",
                    "",
                    "                    jsonData: jsonData,",
                    "                },",
                    "",
                    "                scope: this,",
                    "                success: function(response){",
                    "                    var responseText = Ext.decode(response.responseText);",
                    "                    Ext.MessageBox.alert('User Update','Successfully Updated Changes');",
                    "                },",
                    "                failure:function(){",
                    "                    Ext.MessageBox.alert('Status','Unable to connect to server');",
                    "                }",
                    "            });",
                    "        }",
                    "",
                    "    });",
                    "        }else{",
                    "            Ext.MessageBox.alert('Status','Please select a record to update');",
                    "        }"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnUpdateAdminClick",
            "designerId": "193bc41c-cd2d-4516-89e5-03bba6ac9aad"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAdminResetChange",
                "designer|targetType": "MyButton14",
                "fn": "onBtnAdminResetChangeClick",
                "implHandler": [
                    "",
                    "var userClick = Ext.getCmp('viewUserList');",
                    "Ext.Msg.confirm('Status','Do you want to reset changes? ', function(btn){",
                    "",
                    "    if (btn==='yes'){",
                    "",
                    "",
                    "    userClick.fireEvent('click');",
                    "",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnAdminResetChangeClick",
            "designerId": "7d6ad5f7-5302-4f38-99a5-a038c4d3ddcc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnProductsReset",
                "designer|targetType": "MyButton2",
                "fn": "onBtnProductsResetClick",
                "implHandler": [
                    "var userClick = Ext.getCmp('products');",
                    "Ext.Msg.confirm('Status','Do you want to reset changes? ', function(btn){",
                    "",
                    "    if (btn==='yes'){",
                    "",
                    "",
                    "    userClick.fireEvent('click');",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnProductsResetClick",
            "designerId": "1c5e93d5-5952-4446-b602-0affc0e22d0b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnOrderRequestReset",
                "designer|targetType": "MyButton3",
                "fn": "onBtnOrderRequestResetClick",
                "implHandler": [
                    "var userClick = Ext.getCmp('orderRequest');",
                    "Ext.Msg.confirm('Status','Do you want to reset changes? ', function(btn){",
                    "",
                    "    if (btn==='yes'){",
                    "",
                    "",
                    "    userClick.fireEvent('click');",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnOrderRequestResetClick",
            "designerId": "51e03ae4-cd34-4da7-a54e-d9c41af50656"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#orderRequest",
                "designer|targetType": "MyMenuItem2",
                "fn": "onOrderRequestClick",
                "implHandler": [
                    "this.getOrderRequestsPanel().show();",
                    "this.getViewAllOrderPanel().hide();",
                    "this.getCustomerConfirmPanel().hide();",
                    "this.getUserListPanel().hide();",
                    "this.getProductListPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "",
                    "",
                    "var orderGrid = Ext.getCmp('orderRequestsGrid');",
                    "var orderGridStore = orderGrid.getStore();",
                    "",
                    "",
                    "orderGridStore.remoteFilter = false;",
                    "orderGridStore.clearFilter();",
                    "",
                    "",
                    "",
                    "orderGridStore.clearData();",
                    "orderGrid.getView().refresh();",
                    "",
                    "Ext.Ajax.request({",
                    "     url: window.location.pathname +'admin/getOrders',",
                    "     method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "          var responseText = Ext.decode(response.responseText);",
                    "",
                    "       for (var ctr = 0; ctr < responseText.orderList.length; ctr++){",
                    "            var order = {",
                    "                orderId: responseText.orderList[ctr].order.orderId,",
                    "                userId: responseText.orderList[ctr].userID,",
                    "                userFullName: responseText.orderList[ctr].fullName,",
                    "                orderDate: responseText.orderList[ctr].order.orderDate,",
                    "                totalCost: responseText.orderList[ctr].order.totalCost,",
                    "                orderStatus: responseText.orderList[ctr].order.orderStatus",
                    "",
                    "            };",
                    "",
                    "            orderGridStore.add(order);",
                    "           orderGridStore.filter('orderStatus','Pending');",
                    "        }",
                    "    },",
                    "",
                    "    failure: function(){",
                    "        Ext.MessageBox.alert('Loading Failed','Unable to connect to server');",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onOrderRequestClick",
            "designerId": "a03fec68-5b4a-45ac-b0b2-62912add8da7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmBtnReset",
                "designer|targetType": "MyButton18",
                "fn": "onFrmBtnResetClick",
                "implHandler": [
                    "Ext.Msg.confirm('Confirm','Do you want to reset fields?',function(btn){",
                    "        if (btn==='yes'){",
                    "            Ext.getCmp('frmProductName').setValue();",
                    "            Ext.getCmp('frmProductDescription').setValue();",
                    "            Ext.getCmp('frmProductPrice').setValue();",
                    "            Ext.getCmp('frmProductQuantity').setValue();",
                    "            Ext.getCmp('frmImagePath').setValue();",
                    "        }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onFrmBtnResetClick",
            "designerId": "571c7feb-2437-45c2-8795-3b1fc6b422f5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnResetAdmin",
                "designer|targetType": "MyButton16",
                "fn": "onBtnResetAdminClick",
                "implHandler": [
                    "Ext.Msg.confirm('Confirm','Do you want to reset fields?',function(btn){",
                    "        if (btn==='yes'){",
                    "            Ext.getCmp('frmAdminFullname').setValue();",
                    "            Ext.getCmp('frmAdminUsername').setValue();",
                    "            Ext.getCmp('frmAdminPassword').setValue();",
                    "            Ext.getCmp('frmAdminConfirm').setValue();",
                    "            Ext.getCmp('frmAdminEmail').setValue();",
                    "            Ext.getCmp('frmAdminAddress').setValue();",
                    "            Ext.getCmp('frmAdminMobile').setValue();",
                    "        }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnResetAdminClick",
            "designerId": "97d564a9-4a53-46b0-8208-d773aa34136b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "onlineUsersPanel",
                "selector": "#onlineUsersPanel"
            },
            "name": "onlineUsersPanel",
            "designerId": "3efa28f0-829d-450a-a4f9-17aa8d918885"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#viewOnlineUsers",
                "designer|targetType": "MyMenuItem6",
                "fn": "onViewOnlineUsersClick",
                "implHandler": [
                    "this.getOrderRequestsPanel().hide();",
                    "this.getCustomerConfirmPanel().hide();",
                    "this.getProductListPanel().hide();",
                    "this.getViewAllOrderPanel().hide();",
                    "this.getUserListPanel().hide();",
                    "this.getProductFeedbackPanel().hide();",
                    "this.getOnlineUsersPanel().show();",
                    "",
                    "var onlineUsersGrid = Ext.getCmp('onlineUsersGrid');",
                    "var onlineUsersStore = onlineUsersGrid.getStore();",
                    "",
                    "",
                    "onlineUsersStore.clearData();",
                    "onlineUsersGrid.getView().refresh();",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "     url: window.location.pathname +'admin/getOnlineUsers',",
                    "     method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "",
                    "        for (var ctr = 0; ctr < responseText.onlineList.length; ctr++){",
                    "            var onlineUsers = {",
                    "                userId: responseText.onlineList[ctr].userId,",
                    "                userName: responseText.onlineList[ctr].userName",
                    "            };",
                    "",
                    "            onlineUsersStore.add(onlineUsers);",
                    "        }",
                    "    },",
                    "    failure:function(){",
                    "        Ext.MessageBox.alert('Status','Unable to connect to server');",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onViewOnlineUsersClick",
            "designerId": "2f5713d5-812a-418b-b044-77bd5e8c7c2d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#viewProductFeedback",
                "designer|targetType": "MyMenuItem7",
                "fn": "onViewProductFeedbackClick",
                "implHandler": [
                    "this.getProductFeedbackPanel().show();",
                    "this.getOrderRequestsPanel().hide();",
                    "this.getCustomerConfirmPanel().hide();",
                    "this.getProductListPanel().hide();",
                    "this.getViewAllOrderPanel().hide();",
                    "this.getOnlineUsersPanel().hide();",
                    "this.getUserListPanel().show();",
                    "",
                    "",
                    "var productFeedbackGrid = Ext.getCmp('productFeedbackGrid');",
                    "var productFeedbackStore = productFeedbackGrid.getStore();",
                    "",
                    "",
                    "productFeedbackStore.clearData();",
                    "productFeedbackGrid.getView().refresh();",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "     url: window.location.pathname +'admin/getProductComments',",
                    "     method: 'POST',",
                    "",
                    "    scope: this,",
                    "    success: function(response){",
                    "        var responseText = Ext.decode(response.responseText);",
                    "",
                    "        for (var ctr = 0; ctr < responseText.comments.length; ctr++){",
                    "            var productComments = {",
                    "                productName: responseText.comments[ctr].productName,",
                    "                comment: responseText.comments[ctr].comment",
                    "            };",
                    "",
                    "            productFeedbackStore.add(productComments);",
                    "        }",
                    "    },",
                    "    failure:function(){",
                    "        Ext.MessageBox.alert('Status','Unable to connect to server');",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onViewProductFeedbackClick",
            "designerId": "68636b8b-a3f5-4980-b56e-43f956345d57"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "productFeedbackPanel",
                "selector": "#productFeedbackPanel"
            },
            "name": "productFeedbackPanel",
            "designerId": "0d6d8735-5f46-401a-b833-8de9088ac446"
        }
    ]
}