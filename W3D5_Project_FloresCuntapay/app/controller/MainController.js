/*
 * File: app/controller/MainController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BMS.controller.MainController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'gridView',
            selector: '#gridView'
        },
        {
            ref: 'frmLogin',
            selector: '#frmLogin'
        },
        {
            ref: 'mainPage',
            selector: '#mainPage'
        }
    ],

    onBtnCreateClick: function() {

        this.oRowEditing.cancelEdit();
        //create model
        var record = Ext.create('BMS.model.BookModel', {
            title: '',
            author:'',
            publisher:'',
            category:'',
            datepublished:''

        });
        // insert to store
        this.oStore.insert(0, record);
        // start editing
        this.oRowEditing.startEdit(record, 4);


    },

    onBtnDeleteClick: function() {
        var grid = this.getGridView();
        var srecord =grid.getSelectionModel();
        this.oRowEditing.cancelEdit();
        //remove selected record
        this.oStore.remove(srecord.getSelection());
        if(oStore.getCount() >0){
            //always select incex 0
            srecord.select(0);
        }
    },

    onLogoutClick: function(button, e, eOpts) {

        this.frmLogin.show();
        Ext.getCmp('mainPage').hide();
    },

    onTitleSearchChange: function(field, newValue, oldValue, eOpts) {
        var title = Ext.getCmp('title').getValue();
        var store = Ext.getStore('BookStore');

        if(Ext.isEmpty(title)){
            store.clearFilter();
        }else{
            store.filter('title', title);
        }

    },

    onCategoryChange: function() {
        var category = Ext.getCmp('category').getValue();
        var store = Ext.getStore('BookStore');

        if(Ext.isEmpty(category)){
            store.clearFilter();
        }else{
            store.filter('category', category);
        }

    },

    onLaunch: function() {

        this.oRowEditing = Ext.create('Ext.grid.plugin.RowEditing',{
            clicksToMoveEditor: 1,
                autoCancel: false
        });

        this.oStore = Ext.getStore('BookStore');

        this.frmLogin = this.getFrmLogin();
    },

    init: function(application) {
        this.control({
            "#btnCreate": {
                click: this.onBtnCreateClick
            },
            "#btnDelete": {
                click: this.onBtnDeleteClick
            },
            "#btnLogout": {
                click: this.onLogoutClick
            },
            "#title": {
                change: this.onTitleSearchChange
            },
            "#category": {
                change: this.onCategoryChange
            }
        });
    }

});
