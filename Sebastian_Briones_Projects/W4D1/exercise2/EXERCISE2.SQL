/*
DATA DEFINITION LANGUAGE IS USED TO DEFINE THE DATABASE  OBJECTS SUCH AS TABLES, VIEWS, TRIGGERS AND SEQUENCES 

*/
--DDL
CREATE TABLE USERS(
	 USER_ID       NUMBER(15)   NOT NULL PRIMARY KEY
	,USERNAME      VARCHAR(40)  UNIQUE NOT NULL 
	,USER_PASSWORD VARCHAR(100) NOT NULL
	,FIRST_NAME    VARCHAR(40)  NOT NULL
	,LAST_NAME     VARCHAR(40)  NOT NULL
	,MOBILE_NUMBER VARCHAR(15) 
	,EMAIL         VARCHAR(50)  NOT NULL
	,HOME_ADDRESS  VARCHAR(225) NOT NULL
	,USER_ROLE     VARCHAR(8)   NOT NULL
);



CREATE TABLE ORDERS(
   ORDER_ID   NUMBER(15)  NOT NULL PRIMARY KEY
  ,USER_ID    NUMBER(15)  NOT NULL
  ,ORDER_DATE VARCHAR(18) NOT NULL
);


CREATE TABLE PRODUCT(
    PRODUCT_ID             NUMBER(15)   NOT NULL PRIMARY KEY
   ,PRODUCT_NAME           VARCHAR(80)  UNIQUE NOT NULL
   ,PRODUCT_DESCRIPTION    VARCHAR(220) NOT NULL
   ,PRODUCT_PRICE          NUMBER(10,2) NOT NULL
   ,PRODUCT_STOCK_QUANTITY NUMBER(8)    NOT NULL
);

--ORDER ITEM TABLE
CREATE TABLE ORDER_ITEM(
    ORDER_ITEM_ID  NUMBER(15)   NOT NULL PRIMARY KEY
   ,ORDER_ID       NUMBER(15)   NOT NULL
   ,PRODUCT_ID     NUMBER(15)   NOT NULL
   ,QUANTITY       NUMBER(4)    NOT NULL
   ,ORDERED_PRICE  NUMBER(10,2) NOT NULL
);

/*
SAMPLE SEQUENCE AND TRIGGER FOR USERS TABLE
*/

CREATE SEQUENCE USER_UUID_SEQ START WITH 10000000001 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER USER_ID_TRIG
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
IF :new.USER_ID IS NULL THEN
SELECT USER_UUID_SEQ.nextval INTO :new.USER_ID FROM DUAL;
END IF;
END;

/*
  
  Data manipulation language (DML) statements 
  can manipulate data in existing schema objects. These statements do not automatically commit;
*/
--INSERT STATEMENTS

--USERS
INSERT INTO USERS VALUES(10001, 'brionse','redhat123', 'Sebastian', 'Brionse', '09123456781','sebastian.briones@oocl.com','Laguna, Philippines', 'customer');
INSERT INTO USERS VALUES(10002, 'vergajo','snakeymoves', 'Jaybee', 'Vergara', '09123456781','johnbenedict.vergara@oocl.com','Manila, Philippines', 'customer');

/*
USERNAME
USER_PASSWORD
FIRST_NAME
LAST_NAME
MOBILE_NUMBER
EMAIL
HOME_ADDRESS
USER_ROLE
*/


--ORDERS
INSERT INTO ORDERS VALUES(101, 10001, CURRENT_DATE);
COMMIT;

--PRODUCT
INSERT INTO PRODUCT VALUES(1001, 'Bag', 'red leather bag', 345.67, 12);
INSERT INTO PRODUCT VALUES(1002, 'Iphone', 'latest version', 1000.67, 10);

--ORDER ITEM
INSERT INTO ORDER_ITEM VALUES(2001, 101, 1001, 2, 345.67);
INSERT INTO ORDER_ITEM VALUES(2002, 101, 1002, 1, 1000.67);


--UPDATE
UPDATE USERS
SET USER_PASSWORD = 'snakey'
WHERE USER_ID = 10002;
COMMIT;

--DELETE 

/*
When the Table is a child table, the record in it must be deleted first before the record that it references, if there is no cascade on delete
We cannot delete a parent when there is still a child.
*/
DELETE FROM ORDER_ITEM WHERE ORDER_ID=101;
DELETE FROM ORDERS WHERE USER_ID=10001;
DELETE FROM USERS WHERE USER_ID=10001;


/**
  Data Query Language is used to retrieve the records stored in the table in the Database
*/
SELECT A.FIRST_NAME
      ,A.LAST_NAME
      ,B.ORDER_ID
      ,B.ORDER_DATE
      ,D.PRODUCT_NAME
      ,D.PRODUCT_DESCRIPTION
      ,C.QUANTITY
FROM USERS A
    ,ORDERS B
    ,PRODUCT D
    ,ORDER_ITEM C
WHERE A.USER_ID = B.USER_ID
  AND B.ORDER_ID = C.ORDER_ID
  AND C.PRODUCT_ID = D.PRODUCT_ID;
  
/*
OUTPUT:
FIRST_NAME LAST_NAME ORDER_ID ORDER_DATE PRODUCT_NAME    PRODUCT_DESCRIPTION  QUANTITY
Sebastian	 Brionse	  101	    04-JUL-16	 Bag	           red leather bag	    2
Sebastian	 Brionse	  101	    04-JUL-16	 Iphone	         latest version	      1
*/

SELECT * FROM USERS;

/*
DCL or Data Control Language is used to manage user access to an Oracle database 
*/

INSERT INTO USERS(USERNAME,USER_PASSWORD,FIRST_NAME,LAST_NAME,MOBILE_NUMBER,EMAIL,HOME_ADDRESS,USER_ROLE) VALUES( 'yume','rehaname', 'Melvin', 'Yu', '0987654321','melvin.yu@oocl.com','Laguna, Philippines', 'admin');
COMMIT;

UPDATE USERS SET FIRST_NAME='Melvs'
WHERE LAST_NAME='Yu';
ROLLBACK;

GRANT SELECT,UPDATE,DELETE  ON USERS TO TUTOR;
GRANT SELECT,UPDATE,DELETE ON ORDERS TO TUTOR;
GRANT SELECT,UPDATE,DELETE ON ORDER_ITEM TO TUTOR;
GRANT SELECT,UPDATE,DELETE ON PRODUCT TO TUTOR;

REVOKE SELECT,UPDATE,DELETE ON USERS FROM TUTOR;
REVOKE SELECT,UPDATE,DELETE ON ORDERS FROM TUTOR;
REVOKE SELECT,UPDATE,DELETE ON ORDER_ITEM FROM TUTOR;
REVOKE SELECT,UPDATE,DELETE ON PRODUCT FROM TUTOR;
  